# This action renders PlantUML diagrams and pushes the
# resulting PNG file to your wiki repo.
#
# As it does not use the public PlantUML render service
# but an intance of the PlantUML Java app, this action
# doesn't leak your documentation to the public and can
# therefore be used in private repositories.

name: Render PlantUML

on:
    push:
        branches: [ $default-branch ]
    pull_request:
        branches: [ $default-branch ]

# defaults:
#     run:
#         working-directory: ./plantuml

jobs:
    render-plantuml:
        name: Render PlantUML
        runs-on: ubuntu-latest
        container: ubuntu:latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v2

            - name: Build render container
              run: docker build -t render-plantuml .

            - name: Render diagrams
              run: docker run --rm --volume $(pwd)/input_directory:/inut --volume $(pwd)/output_directory:/output render-plantuml --env ARTIFACTS_REPO=$ARTIFACTS_REPO --env ARTIFACTS_DIR=$ARTIFACTS_DIR
              env:
                ARTIFACTS_REPO: git@github.com:social-gardeners/pot-pourri-pro.wiki.git
                ARTIFACTS_DIR: /attachments/auto-generated
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: DEBUG List files to check if I can access them in the next steps
              run: ls -la $(pwd)/output_directory

            - name: Checkout wiki repo
              uses: actions/checkout@v2
              with:
                repository: social-gardeners/pot-pourri-pro.wiki
                token: ${{ secrets.GITHUB_TOKEN }}
              run: cd pot-pourri-pro.wiki && ls -la

